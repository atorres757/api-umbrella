set_by_lua_block $x_api_umbrella_request_id {
  local txid = require "resty.txid"
  return txid()
}
proxy_set_header X-Api-Umbrella-Request-ID $x_api_umbrella_request_id;

# Don't buffer proxied requests to allow for streaming APIs.
proxy_buffering off;

# Set proxy timeouts.
proxy_connect_timeout {{nginx._initial_proxy_connect_timeout}}s;
proxy_read_timeout {{nginx._initial_proxy_read_timeout}}s;
proxy_send_timeout {{nginx._initial_proxy_send_timeout}}s;

# If the backend only returns gzipped responses, decompress them as
# appropriate to meet the Accept headers of the current client.
gunzip on;

rewrite_by_lua_file '{{_src_root_dir}}/src/api-umbrella/proxy/hooks/rewrite.lua';
access_by_lua_file '{{_src_root_dir}}/src/api-umbrella/proxy/hooks/access.lua';
header_filter_by_lua_file '{{_src_root_dir}}/src/api-umbrella/proxy/hooks/header_filter.lua';
log_by_lua_file '{{_src_root_dir}}/src/api-umbrella/proxy/hooks/log_initial_proxy.lua';

proxy_set_header Host $proxy_host_header;

# Proxy over HTTP 1.1 so keepalive connections to the backend are supported.
proxy_http_version 1.1;
proxy_set_header Connection "";

proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $real_scheme;
proxy_set_header X-Forwarded-Port $real_port;

proxy_pass http://api_umbrella_trafficserver_backend;

proxy_redirect http://{{web.host}}:{{web.port}}/ /;
proxy_redirect http://$host:{{web.port}}/ /;
proxy_redirect http://{{static_site.host}}:{{static_site.port}}/ /;
proxy_redirect http://$host:{{static_site.port}}/ /;
